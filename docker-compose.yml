services:
  jobmanager:
    build: ./flink
    hostname: jobmanager
    container_name: jobmanager
    ports:
      - "8081:8081"
    command: jobmanager
    volumes:
      - .:/data/
    environment:
    - |
      FLINK_PROPERTIES=
      jobmanager.rpc.address: jobmanager
      rest.flamegraph.enabled: true
  taskmanager:
    build: ./flink
    hostname: taskmanager
    depends_on:
      - jobmanager
    command: taskmanager
    deploy:
      replicas: 2
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 4

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    container_name: broker
    image: confluentinc/cp-kafka:7.5.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    depends_on:
      - kafka
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: broker:9092
      JVM_OPTS: "-Xms32M -Xmx64M"

  minio:
    image: minio/minio
    container_name: minio
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
    ports:
      - 9001:9001
    command: ["server", "/data", "--console-address", ":9001"]

  mc:
    depends_on:
      - minio
    image: minio/mc
    container_name: mc
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio:9000 admin password) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio/warehouse;
      /usr/bin/mc mb minio/warehouse;
      tail -f /dev/null
      " 

  hive-metastore:
    container_name: hms
    build: ./hms-standalone-s3
    ports:
      - "9083:9083"
    environment:
      - HMS_LOGLEVEL=INFO

  pyiceberg:
    image: python:3.12-bookworm
    container_name: pyiceberg
    environment:
      PYICEBERG_CATALOG__DEFAULT__URI: thrift://hms:9083
      PYICEBERG_CATALOG__DEFAULT__S3__ACCESS_KEY_ID: admin
      PYICEBERG_CATALOG__DEFAULT__S3__SECRET_ACCESS_KEY: password
      PYICEBERG_CATALOG__DEFAULT__S3__PATH_STYLE_ACCESS: true
      PYICEBERG_CATALOG__DEFAULT__S3__ENDPOINT: http://minio:9000
    entrypoint: >
      /bin/sh -c "
      pip install pyiceberg["s3fs,hive,pyarrow"];
      sleep infinity
      "
      

  duckdb:
    image: davidgasquez/duckdb
    container_name: duckdb
    restart: no
    entrypoint: tail -f /dev/null

  kcat:
    image: edenhill/kcat:1.7.1
    container_name: kcat
    restart: no
    entrypoint: tail -f /dev/null

  # shadowtraffic:
  # # watch 'docker exec shadowtraffic curl -s localhost:9400/metrics |grep events_sent'
  #   image: shadowtraffic/shadowtraffic:0.6.0
  #   container_name: shadowtraffic
  #     #    profiles: ["shadowtraffic"]
  #   env_file:
  #     - shadowtraffic/license.env
  #   volumes:
  #     - ./shadowtraffic:/data
  #   command: --config /data/kafka-retail.json
  #   depends_on:
  #     kafka:
  #       condition: service_healthy

  generate_data:
    build: ./generate_data
    container_name: generate_data
    depends_on:
      kafka:
        condition: service_healthy
    command: ["tail", "-f", "/dev/null"]

# Without a network explicitly defined, you hit this Hive/Thrift error
# java.net.URISyntaxException Illegal character in hostname
# https://github.com/TrivadisPF/platys-modern-data-platform/issues/231
networks:
  default:
     name: zaphod
